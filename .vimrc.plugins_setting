"-------------------------------------------------------------------------------
" プラグインごとの設定 Plugins
"-------------------------------------------------------------------------------

" ------------------------------------
" grep.vim
"------------------------------------
" 検索外のディレクトリ、ファイルパターン
let Grep_Skip_Dirs = '.svn .git .hg'
let Grep_Skip_Files = '*.bak *~'

"------------------------------------
" taglist.Vim
"------------------------------------
" 関数一覧
"set tags=tags
"set tags+=~/.tags
"let Tlist_Ctags_Cmd = '/usr/local/Cellar/ctags/5.8/bin/ctags' " ctagsのパス
"let Tlist_Show_One_File = 1               " 現在編集中のソースのタグしか表示しない
"let Tlist_Exit_OnlyWindow = 1             " taglistのウィンドーが最後のウィンドーならばVimを閉じる
"let Tlist_Use_Right_Window = 1            " 右側でtaglistのウィンドーを表示
"let Tlist_Enable_Fold_Column = 1          " 折りたたみ
"let Tlist_Auto_Open = 1                   " 自動表示
"let Tlist_Auto_Update = 1
"let Tlist_WinWidth = 30
"map <silent> <leader>tl :Tlist<CR>        " taglistを開くショットカットキー
"nmap <F7> :CMiniBufExplorer<CR>:TrinityToggleTagList<CR>:TMiniBufExplorer<CR>
"nmap <Leader>tl :CMiniBufExplorer<CR>:TrinityToggleTagList<CR>:TMiniBufExplorer<CR>

"------------------------------------
" Srcexp
"------------------------------------
" [Srcexpl] tagsを利用したソースコード閲覧・移動補助機能
let g:SrcExpl_UpdateTags    = 1         " tagsをsrcexpl起動時に自動で作成（更新）
let g:SrcExpl_RefreshTime   = 0         " 自動表示するまでの時間(0:off)
let g:SrcExpl_WinHeight     = 9         " プレビューウインドウの高さ
let g:SrcExpl_RefreshMapKey = "<Space>" " 手動表示のMAP
let g:SrcExpl_GoBackMapKey  = "<C-b>"   " 戻る機能のMAP
" Source Explorerの機能ON/OFF
" nmap <F8> :CMiniBufExplorer<CR>:SrcExplToggle<CR>:TMiniBufExplorer<CR>

"------------------------------------
" quickrun.vim
"------------------------------------
let g:quickrun_config = {}
let g:quickrun_config._ = {
  \ 'runner' : 'vimproc',
  \ "runner/vimproc/updatetime" : 60,
  \ 'outputter/buffer/split' : ':botright 8sp',
  \ 'outputter/buffer/close_on_empty' : 1
  \}

let g:quickrun_config['rspec/bundle'] = {
  \ 'type': 'rspec/bundle',
  \ 'command': "rspec",
  \ 'cmdopt': "-l %{line('.')}",
  \ 'exec': "bundle exec %c %o %s ",
  \ 'outputter/buffer/filetype': 'rspec-result',
  \ 'filetype': 'rspec-result'
  \}
let g:quickrun_config['rspec/normal'] = {
  \ 'type': 'rspec/normal',
  \ 'command': "rspec",
  \ 'cmdopt': "-l %{line('.')}",
  \ 'exec': '%c %o %s',
  \ 'outputter/buffer/filetype': 'rspec-result',
  \ 'filetype': 'rspec-result'
  \}
function! RSpecQuickrun()
  let b:quickrun_config = {'type' : 'rspec/bundle'}
endfunction

" <C-c> で実行を強制終了させる
" quickrun.vim が実行していない場合には <C-c> を呼び出す
nnoremap <expr><silent> <C-c> quickrun#is_running() ?  quickrun#sweep_sessions() : "\<C-c>"

autocmd BufReadPost *_spec.rb call RSpecQuickrun()
"------------------------------------
" Syntastic
"------------------------------------
" エラー行をsignで表示する
let g:syntastic_enable_signs = 1
" 可能ならhighligt表示する
let g:syntastic_enable_highlighting = 1
" 自動的に開いたり閉じたりする
let g:syntastic_auto_loc_list=1


"------------------------------------
" NERDTree
"------------------------------------
let NERDTreeShowHidden=1

"------------------------------------
" ctrlp
"------------------------------------
set runtimepath^=~/.vim/bundle/ctrlp.vim


"------------------------------------
" neocomplcache
"------------------------------------
let g:neocomplcache_enable_at_startup = 1 " 起動時に有効化
let g:neocomplcache_enable_smart_case = 1
let g:neocomplcache_min_syntax_length = 3

"------------------------------------
" ctrlp
"------------------------------------
let g:ctrlp_custom_ignore = '\v[\/]\.(git|svn)$'

